CREATE TABLE PROFILES (
  ID           VARCHAR2(36) PRIMARY KEY,
  CUSTOMER_REF VARCHAR2(64) UNIQUE,
  CREATED_AT   TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE TABLE BLOCKS (
  ID         VARCHAR2(36) PRIMARY KEY,
  PROFILE_ID VARCHAR2(36) NOT NULL REFERENCES PROFILES(ID),
  KIND       VARCHAR2(30) NOT NULL
);

CREATE TABLE BLOCK_VERSIONS (
  ID            VARCHAR2(36) PRIMARY KEY,
  BLOCK_ID      VARCHAR2(36) NOT NULL REFERENCES BLOCKS(ID),
  VERSION_NO    NUMBER NOT NULL,
  VALID_FROM    TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  VALID_TO      TIMESTAMP,
  STATUS        VARCHAR2(16) NOT NULL,
  VALIDATED_AT  TIMESTAMP,
  DATA          CLOB CHECK (DATA IS JSON)
);
CREATE UNIQUE INDEX UX_BV ON BLOCK_VERSIONS(BLOCK_ID, VERSION_NO);
CREATE INDEX IX_BV_CUR ON BLOCK_VERSIONS(BLOCK_ID, VALID_TO);

-- Vue (ou matérialisée) des versions courantes
CREATE OR REPLACE VIEW CURRENT_BLOCK_V AS
SELECT v.BLOCK_ID, v.ID AS BLOCK_VERSION_ID, v.VERSION_NO, b.KIND, v.VALID_FROM AS EFFECTIVE_FROM
FROM BLOCK_VERSIONS v JOIN BLOCKS b ON b.ID = v.BLOCK_ID
WHERE v.VALID_TO IS NULL;

-- HITS avec FK explicite vers PROFILES (==> lien Hit → Profile)
CREATE TABLE HITS (
  ID          VARCHAR2(36) PRIMARY KEY,
  PROFILE_ID  VARCHAR2(36) NOT NULL REFERENCES PROFILES(ID),
  HIT_TYPE    VARCHAR2(50) NOT NULL,
  SEVERITY    VARCHAR2(10) NOT NULL,
  PAYLOAD     CLOB CHECK (PAYLOAD IS JSON),
  HASH_KEY    VARCHAR2(64),
  OCCURRED_AT TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  STATUS      VARCHAR2(20) DEFAULT 'OPEN' NOT NULL,
  MASTER_HIT_ID VARCHAR2(36)
);
CREATE INDEX IX_HITS_PROFILE ON HITS(PROFILE_ID, STATUS);

-- Lien N↔M Hit ↔ Block (avec option de pointer une version)
CREATE TABLE HIT_BLOCK_LINKS (
  HIT_ID           VARCHAR2(36) NOT NULL REFERENCES HITS(ID),
  BLOCK_ID         VARCHAR2(36) NOT NULL REFERENCES BLOCKS(ID),
  BLOCK_VERSION_ID VARCHAR2(36)     REFERENCES BLOCK_VERSIONS(ID),
  LINKED_AT        TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  PRIMARY KEY (HIT_ID, BLOCK_ID)
);
CREATE INDEX IX_HBL_VER ON HIT_BLOCK_LINKS(BLOCK_VERSION_ID);
